/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.LocalOfficial;

import Business.EcoSystem.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Message.MessageUtility;
import Business.Organization.EngineerOrganization;
import Business.Organization.LocalOfficialOrganization;
import Business.Organization.Organization;
import Business.Role.Engineer;
import Business.Sensor.Sensor;
import Business.Sensor.SensorDirectory;
import Business.Street.Street;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OfficialAirQualityCheckRequest;
import Business.WorkQueue.ResidentAirQualityCheckRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Priyank
 */
public class ManageWorkRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private LocalOfficialOrganization localOfficialOrganization;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private SensorDirectory sensorDirectory;

    /**
     * Creates new form AirQualityCheck
     */
    public ManageWorkRequestJPanel(JPanel userProcessContainer, UserAccount userAccount, SensorDirectory sensorDirectory, LocalOfficialOrganization localOfficialOrganization, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.sensorDirectory = sensorDirectory;
        this.localOfficialOrganization = localOfficialOrganization;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;

        streetJTextField.setText(userAccount.getStreetLocation().toString());
        populateComboBox();
        populateRequestTable();
        streetJComboBox.setVisible(false);
        populateResidentRequestTable();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof OfficialAirQualityCheckRequest) {
                Object[] row = new Object[8];
                row[0] = request;
                row[1] = request.getSender();
                row[2] = request.getReceiver();
                row[3] = request.getRequestDate();
                row[4] = request.getResolveDate();
                row[5] = request.getMessage();
                row[6] = request.getStatus();
                row[7] = ((OfficialAirQualityCheckRequest) request).getTestResult();
                model.addRow(row);
            }
        }
    }

    public void populateResidentRequestTable() {
        DefaultTableModel model = (DefaultTableModel) residentWorkRequestJTable.getModel();
        model.setRowCount(0);
        for (WorkRequest request : localOfficialOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof ResidentAirQualityCheckRequest) {
                if (userAccount.getStreetLocation().toString().equalsIgnoreCase(request.toString())) {
                    Object[] row = new Object[8];
                    row[0] = request;
                    row[1] = request.getSender();
                    row[2] = request.getReceiver();
                    row[3] = request.getRequestDate();
                    row[4] = request.getResolveDate();
                    row[5] = request.getMessage();
                    row[6] = request.getStatus();
                    row[7] = ((ResidentAirQualityCheckRequest) request).getTestResult();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateComboBox() {
        streetJComboBox.removeAllItems();
        Street street = userAccount.getStreetLocation();
        for (Sensor sensor : street.getSensorDirectory().getSensorList()) {
            streetJComboBox.addItem(sensor);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        requestCheckJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        streetJComboBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        forwardRequestJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        residentWorkRequestJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sendResidentRequestTextJButton = new javax.swing.JButton();
        streetJTextField = new javax.swing.JTextField();
        sendWorkRequestTextJButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel3.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jLabel3.setText("Work Request");

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Street", "Sender", "Receiver", "Request Date", "Resolve Date", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        requestCheckJButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        requestCheckJButton.setText("New Request");
        requestCheckJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestCheckJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Street");

        streetJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backjButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backjButton1.setText("Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        forwardRequestJButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        forwardRequestJButton.setText("Forward Request");
        forwardRequestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardRequestJButtonActionPerformed(evt);
            }
        });

        residentWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sensor Name", "Sender", "Receiver", "Request Date", "Resolve Date", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(residentWorkRequestJTable);

        jLabel4.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel4.setText("Resident Work Request");

        jLabel5.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N
        jLabel5.setText("Your Work Request");

        sendResidentRequestTextJButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sendResidentRequestTextJButton.setText("Send Text");
        sendResidentRequestTextJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendResidentRequestTextJButtonActionPerformed(evt);
            }
        });

        streetJTextField.setEnabled(false);

        sendWorkRequestTextJButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sendWorkRequestTextJButton.setText("Send Text");
        sendWorkRequestTextJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendWorkRequestTextJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendResidentRequestTextJButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(streetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(544, 544, 544))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(streetJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(requestCheckJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sendWorkRequestTextJButton))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backjButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(forwardRequestJButton)))
                .addContainerGap(81, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(streetJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(streetJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(requestCheckJButton)
                    .addComponent(sendWorkRequestTextJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sendResidentRequestTextJButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(forwardRequestJButton)
                    .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestCheckJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestCheckJButtonActionPerformed
        sensorDirectory.getSensorList().getClass();
        if (userAccount.getStreetLocation().getSensorDirectory().getSensorList().size() == 0) {
            JOptionPane.showMessageDialog(null, "The street has no sensors installed.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Sensor sensor = (Sensor) streetJComboBox.getSelectedItem();
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("Request Air Quality Check", new RequestCheckJPanel(userProcessContainer, userAccount, enterprise, sensor));
            layout.next(userProcessContainer);

        }
    }//GEN-LAST:event_requestCheckJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void forwardRequestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardRequestJButtonActionPerformed
        int row = residentWorkRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            WorkRequest request = (WorkRequest) residentWorkRequestJTable.getValueAt(row, 0);
            if (request.getStatus().equalsIgnoreCase("Sent")) {
                Date obj = new Date();
                request.setRequestDate(obj);
                request.setStatus("Forwarded");
                populateResidentRequestTable();
                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof EngineerOrganization) {
                        org = organization;
                        break;
                    }
                }

                if (org != null) {
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                JOptionPane.showMessageDialog(null, "Request forwarded to Engineer", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Request already forwarded to Engineer", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_forwardRequestJButtonActionPerformed

    private void sendResidentRequestTextJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendResidentRequestTextJButtonActionPerformed
        int row = residentWorkRequestJTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof EngineerOrganization) {
                    for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount.getStreetLocation().toString().equalsIgnoreCase(streetJTextField.getText())) {
                            String phoneNumber = userAccount.getEmployee().getPhoneNumber();
                            MessageUtility.sendMessage(phoneNumber, "You have a new Work Request. Please Login to your account for further details.");
                            JOptionPane.showMessageDialog(null, "Message has been sent to the Street Engineer.", "Success", JOptionPane.INFORMATION_MESSAGE);
                            break;
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_sendResidentRequestTextJButtonActionPerformed

    private void sendWorkRequestTextJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendWorkRequestTextJButtonActionPerformed
        int row = workRequestJTable.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof EngineerOrganization) {
                    for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
                        if (userAccount.getStreetLocation().toString().equalsIgnoreCase(streetJTextField.getText())) {
                            String phoneNumber = userAccount.getEmployee().getPhoneNumber();
                            MessageUtility.sendMessage(phoneNumber, "You have a new Work Request. Please Login to your account for further details.");
                            JOptionPane.showMessageDialog(null, "Message has been sent to the Street Engineer.", "Success", JOptionPane.INFORMATION_MESSAGE);
                            break;
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_sendWorkRequestTextJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton forwardRequestJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton requestCheckJButton;
    private javax.swing.JTable residentWorkRequestJTable;
    private javax.swing.JButton sendResidentRequestTextJButton;
    private javax.swing.JButton sendWorkRequestTextJButton;
    private javax.swing.JComboBox streetJComboBox;
    private javax.swing.JTextField streetJTextField;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
